package MATHISNOTMETH;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Random;
import java.util.Scanner;
import java.util.StringTokenizer;

public class makePassword
{
	public static void main(String[] args)
	{
		Scanner scan = new Scanner(System.in);

		System.out.println("This is a complex password generator.");
		System.out.println("To start, put your current or a random password and then press enter.");
		String pass = scan.nextLine();
		if (checkGood(pass))
		{
			System.out.print("Your password is good. Do you want a different one (Y/N): ");
			if (scan.next().equals("N"))
			{
				System.out.println("OK");
				scan.close();
				return;
			}
		}
		pass = editPassword(pass);
		scan.close();
	}

	public static String editPassword(String password)
	{
		while (password.length() < 8)
			password += randomWord();

		for (int i = 0; i < password.length(); i++)
		{
			int ascii = password.charAt(i);
			if (ascii == 97)
				password = password.substring(0, i) + "@" + password.substring(i + 1);
		}
	}

	public static String randomWord()
	{
		try
		{
			BufferedReader f = new BufferedReader(new FileReader("words.txt"));

			Random rand = new Random();
			int find = rand.nextInt(370099);
			for (int i = 0; i < find; i++)
				f.readLine();

			int word = f.read();
			f.close();
			return "" + ((char) word);
		}
		catch (IOException e)
		{
		}
		return "amazing";
	}

	public static boolean checkGood(String password)
	{
		if (password.length() < 8)
			return false;
		boolean[] checks = new boolean[4];
		for (int i = 0; i < password.length(); i++)
		{
			int ascii = password.charAt(i);
			if (ascii >= 65 && ascii <= 90)
				checks[0] = true;
			else if (ascii >= 97 && ascii <= 122)
				checks[1] = true;
			else if (ascii >= 48 && ascii <= 57)
				checks[2] = true;
			else
				checks[3] = true;
		}

		for (int i = 0; i < 4; i++)
			if (!checks[i])
				return false;
		return true;
	}
}
