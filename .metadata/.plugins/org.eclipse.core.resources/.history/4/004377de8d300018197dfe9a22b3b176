
// package usaco;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.StringTokenizer;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;

import java.io.IOException;

public class sort
{
	public static void main(String[] args) throws IOException
	{
		BufferedReader f = new BufferedReader(new FileReader("sort.in"));
		PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("sort.out")));
		StringTokenizer st = new StringTokenizer(f.readLine());
		int num = Integer.parseInt(st.nextToken());
		ArrayList<Integer> A = new ArrayList<>(num);

		for (int i = 0; i < num; i++)
		{
			st = new StringTokenizer(f.readLine());
			A.add(Integer.parseInt(st.nextToken()));
		}
		int count = 0;
		boolean sorted = false;
		while (!sorted)
		{
			sorted = true;

			for (int i = 0; i < num - 1 - count; i++)
			{
				while (A.get(i) > A.get(i + 1))
				{
					int temp = A[i];
					A[i] = A[i + 1];
					A[i + 1] = temp;
					sorted = false;
				}
			}
			count++;
		}
		out.println(count);
		out.close();
		f.close();
	}

	public static int idxOf(int[] B, int val)
	{
		int min = 0, max = B.length - 1;
		while (min != max)
		{
			int mid = (min + max) / 2;
			if (B[mid] == val)
				return val;
			else if (B[mid] < val)
				min = mid + 1;
			else
				max = mid;
		}
		return min;
	}
}
