package usaco;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class multimoo
{
	public static int[][] map1;
	public static ArrayList<Integer> switched = new ArrayList<>();

	public static void main(String[] args) throws IOException
	{
		BufferedReader f = new BufferedReader(new FileReader("multimoo.in"));
		PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("multimoo.out")));
		StringTokenizer st = new StringTokenizer(f.readLine());
		int size = Integer.parseInt(st.nextToken());
		map1 = new int[size][size];
		for (int i = 0; i < size; i++)
		{
			st = new StringTokenizer(f.readLine());
			for (int j = 0; j < size; j++)
				map1[i][j] = Integer.parseInt(st.nextToken());
		}
		int max1 = 0;
		for (int i = 0; i < size; i++)
			for (int j = 0; j < size; j++)
				if (map1[i][j] != -1)
				{
					max1 = Math.max(max1, ff(i, j, map1[i][j]));
				}
		int max = 0;
		for (int i = 0; i < size; i++)
			for (int j = 0; j < size; j++)
				if (map1[i][j] != -1)
				{
					max = Math.max(max, ff(i, j, map1[i][j]));
					max1 = Math.max(max1, indivcount);
					indivcount = 0;
				}

		out.println(max1);
		out.println(max);
		out.close();
		f.close();
	}

	public static int ff(int x, int y, int id)
	{
		map1[x][y] = -1;
		int count = 0;
		int[] dx =
			{ 0, 0, 1, -1 };
		int[] dy =
			{ 1, -1, 0, 0 };
		int[] maxes = new int[4];
		for (int i = 0; i < 4; i++)
			if (x + dx[i] > -1 && x + dx[i] < map1.length && y + dy[i] > -1 && y + dy[i] < map1.length)
				if (map1[x + dx[i]][y + dy[i]] == id)
				{
					int temp = ff(x + dx[i], y + dy[i], id);
					indivcount += temp;
					for (int j = 0; j < 4; j++)
						maxes[j] += temp;
				}
				else
				{

				}

	}
}
