
package usaco;

import java.util.ArrayList;
import java.util.Arrays;
// import java.util.StringTokenizer;
// import java.io.BufferedReader;
// import java.io.PrintWriter;
// import java.io.BufferedWriter;
// import java.io.FileReader;
// import java.io.FileWriter;

import java.io.IOException;

public class sort
{
	public static void main(String[] args) throws IOException
	{
		BufferedReader f = new BufferedReader(new FileReader("sort.in"));
		PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("sort.out")));
		StringTokenizer st = new StringTokenizer(f.readLine());
		int num = Integer.parseInt(st.nextToken());
		ArrayList<Integer> A = new ArrayList<>(num);
		int[] B = new int[num];
		for (int i = 0; i < num; i++)
		{
			st = new StringTokenizer(f.readLine());
			A.add(Integer.parseInt(st.nextToken()));
			B[i] = A.get(i);
		}
		int count = 0;
		boolean sorted = false;
		Arrays.sort(B);
		while (!sorted)
		{
			sorted = true;

			for (int i = 0; i < num - 1 - count; i++)
				if (A.get(i) > A.get(i + 1))
				{
					int next = find(A, idxOf(B, A.get(i)), i);
					int temp = A.remove(i);
					A.add(next - 1, temp);
					i = next - 1;
				}
			count++;
		}
		out.println(count);
		out.close();
		f.close();
	}

	public static int find(ArrayList<Integer> A, int val, int start)
	{
		for (int i = start + 1; i < A.size(); i++)
			if (A.get(i) == val)
				return i;
		return -1;
	}

	public static int idxOf(int[] B, int val)
	{
		int min = 0, max = B.length - 1;
		while (min != max)
		{
			int mid = (min + max) / 2;
			if (B[mid] > val)
				max = mid;
			else
				min = mid + 1;
		}
		return min + 1;
	}
}
